@article{coffman1971system,
  title={System deadlocks},
  author={Coffman, Edward G and Elphick, Melanie and Shoshani, Arie},
  journal={ACM Computing Surveys (CSUR)},
  volume={3},
  number={2},
  pages={67--78},
  year={1971},
  publisher={ACM New York, NY, USA}
}

@article{netzer1992race,
  title={What are race conditions? Some issues and formalizations},
  author={Netzer, Robert HB and Miller, Barton P},
  journal={ACM Letters on Programming Languages and Systems (LOPLAS)},
  volume={1},
  number={1},
  pages={74--88},
  year={1992},
  publisher={ACM New York, NY, USA}
}

@article{MagicLock,
	Author = {Yan Cai and W. K. Chan},
	Journal = {IEEE Transactions on Software Engineering (TSE)},
	Title = {Magiclock: Scalable Detection of Potential Deadlocks in Large-Scale Multithreaded Programs},
	Year = {2014}
}

@article{DeadlockAllgemein,
	Author = {K. Mani Chandy and Jayadev Misra and Laura M. Haas},
	Journal = {ACM Transactions on Computer Systems (TOCS)},
	Pages = {144--156},
	Number = {2},
	Volume = {1},
	Title = {Distributed Deadlock Detection},
	Year = {1983}
}

@article{DynamicDeadlock,
	Author = {Pallavi Joshi and Mayur Naik and Koushik Sen and David Gay},
	Journal = {FSE '10 Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering},
	Pages = {327--336},
	Title = {An Effective Dynamic Analysis for Detecting Generalized Deadlocks},
	Year = {2010}
}

@inproceedings{bensalem2005dynamic,
  title={Dynamic deadlock analysis of multi-threaded programs},
  author={Bensalem, Saddek and Havelund, Klaus},
  booktitle={Haifa Verification Conference},
  pages={208--223},
  year={2005},
  organization={Springer}
}

@online{PEARL, 
  author  = {GI-Fachgruppe 4.4.2 'Echtzeitprogrammierung, PEARL'}, 
  title   = {PEARL 90 Sprachreport}, 
  date    = {1995-01-01}, 
  url     = {https://www.real-time.de/misc/PEARL90-Sprachreport-V2.0-GI-1995-de.pdf}, 
  urldate = {2019-11-13}, 
}

@online{PEARLHistory, 
  author  = {IEP Ingenieurbüro für Echtzeitprogrammierung GmbH}, 
  title   = {Die Echtzeit Programmiersprache PEARL}, 
  date    = {2014}, 
  url     = {http://www.pearl90.de/pearlein.htm}, 
  urldate = {2019-12-12}, 
}

@online{OpenPEARL, 
  author  = {Schaible, Marcel and Müller, Rainer}, 
  title   = {OpenPEARL}, 
  date    = {2019}, 
  url     = {https://sourceforge.net/projects/openpearl/}, 
  urldate = {2019-12-13}, 
}

@online{OpenPEARL_Differences_To_PEARL90, 
  author  = {Müller, Rainer}, 
  title   = {Differences between PEARL90 and OpenPEARL}, 
  date    = {2020},
  url     = {https://sourceforge.net/p/openpearl/wiki/Differences%20between%20OpenPEARL%20and%20PEARL90/}, 
  urldate = {2020-04-07}, 
}

@online{OpenPEARL_Structure, 
  author  = {Schaible, Marcel and Müller, Rainer and FMA and Ritzler, Christian
  and Leinad}, 
  title   = {Structure of the OpenPEARL System}, 
  date    = {2020}, 
  url     = {https://sourceforge.net/p/openpearl/wiki/Home/#structure-of-the-openpearl-system}, 
  urldate = {2020-04-07}, 
}

@online{OpenPEARL_Structure_Detailed, 
  author  = {Müller, Rainer}, 
  title   = {Detailed Structure of the OpenPEARL System}, 
  date    = {2020}, 
  url     = {https://sourceforge.net/p/openpearl/wiki/Detailed%20Structure%20of%20the%20OpenPEARL%20System/}, 
  urldate = {2020-04-07}, 
}

@online{Moody_Camels_Concurrentqueue, 
  author  = {cameron314}, 
  title   = {A fast multi-producer, multi-consumer lock-free concurrent queue for C++11}, 
  date    = {2020}, 
  url     = {https://github.com/cameron314/concurrentqueue}, 
  urldate = {2020-03-15}, 
}

@misc{DIN-66253-2:1998-04,
type = {Norm},
number = {DIN 66253-2:1998-04},
month = {04},
year = {1998},
title = {{Informationstechnik - Programmiersprache PEARL - PEARL 90}},
}

@misc{DIN-66253:2018-03,
type = {Norm},
number = {DIN 66253-2:1998-04},
month = {03},
year = {2018},
title = {{Informationsverarbeitung - Programmiersprache PEARL - SafePEARL}},
}